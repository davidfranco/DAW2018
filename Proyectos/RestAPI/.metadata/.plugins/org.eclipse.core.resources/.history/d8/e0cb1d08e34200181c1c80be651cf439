package es.skills2018.api.resources;


import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import es.skills2018.api.beans.Movie;
import es.skills2018.api.dao.MovieDAO;
import es.skills2018.api.database.DatabaseObject;
import es.skills2018.api.enums.CustomMediaType;

@Path("/movies")
public class MovieResource {
	
	/**
	 * This EndPoint gets called to get a list of all the available movies.
	 */
	@GET
	@Path("/listAll")
	@Produces(CustomMediaType.APPLICATION_JSON)
	public Response listAll() {
		Connection connection;
		try {
			//We return the connection from the connection pool
			connection = new DatabaseObject().getConnection();
		} catch (SQLException e) {
			return Response.status(Response.Status.INTERNAL_SERVER_ERROR)
					.entity("Database Error")
					.build();
		}
		//Movie DAO Construct
		MovieDAO movieDAO = new MovieDAO(connection);
		//We return all the movies using an empty filter
		List<Movie> movieList = movieDAO.findAll(filter);
		if(movieList == null){
			releaseConnection(connection);
			return Response.status(Response.Status.INTERNAL_SERVER_ERROR)
					.entity("Database Error")
					.build();
		}
		return Response.status(Response.Status.OK).entity(response).build();
	}
	private void releaseConnection(Connection c){
		try{
			c.close();
		}catch(Exception ex){}
	}
}
